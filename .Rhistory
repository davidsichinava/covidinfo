src <- readxl::read_excel("www/source.xlsx")
names(src)
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
desc(date)%>%
new_cases[1]
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
new_cases[1]
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
dplyr::select(new_cases[1])
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
new_cases[1]
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
slice(1)
new_cases
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
slice(1)%>%
new_cases
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
slice(1)%>%
pull(new_cases)
new_cases
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
# slice(1)%>%
pull(new_cases)
new_cases
new_cases <-
src %>%
mutate(lubridate::as_date(date))%>%
arrange(-date)%>%
# slice(1)%>%
pull(new_cases)
new_cases <-
src %>%
mutate(lubridate::as_date(date))%>%
arrange(-date)%>%
slice(1)
new_cases <-
src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
slice(1)
new_cases <-
src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
slice(1)
src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
slice(1)
src %>%
mutate(lubridate::as_date(date))%>%
arrange(date)%>%
slice(tail(1))
src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)%>%
pull(new_cases)
new_cases
last_date <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)%>%
pull(date)
last_date
todays_date <- src %>%
mutate(as.Date(date, format = "%d/%m/%Y"))%>%
arrange(desc(date))%>%
slice(1)%>%
pull(date)
todays_date
todays_date <- src %>%
mutate(lubridate::as_date(date, format = "%d/%m/%Y"))%>%
arrange(desc(date))%>%
slice(1)%>%
pull(date)
todays_date <- src %>%
mutate(lubridate::mdy(date))%>%
arrange(desc(date))%>%
slice(1)%>%
pull(date)
todays_date <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)%>%
pull(date)
todays_date <- format(todays_date, format = "%d/%m/%Y")
todays_date
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
daily_cases  <- src %>%
ggplot(aes(date, new_cases))+
geom_line()+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
output$daily_cases_chart <- renderGirafe(
girafe(ggobj = daily_cases,
options = list(opts_tooltip(css = tooltip_css),
opts_sizing(width = .7) )
)
)
daily_cases
daily_cases  <- identity() src %>%
ggplot(aes(date, new_cases))+
geom_line()+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line()+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(aes(size=2))+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(aes(size=1))+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1)+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1)+
geom_smooth()+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1)+
geom_smooth(method = "gam")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5)+
geom_smooth(method = "gam")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5)+
geom_smooth(method = "gam")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_blank()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5)+
geom_smooth(method = "gam")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_void()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5)+
geom_smooth(method = "gam")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_blank()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5)+
geom_smooth(method = "gam")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5, color="blue")+
geom_smooth(method = "gam")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5, color="#037ffc")+
geom_smooth(method = "gam")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3,
color="#037ffc")+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
# daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5, color="#037ffc")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3,
color="#037ffc", alpha=0.5)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
output$daily_cases_chart <- renderGirafe(
girafe(ggobj = daily_cases,
options = list(opts_tooltip(css = tooltip_css),
opts_sizing(width = .7) )
)
)
girafe(ggobj = daily_cases,
options = list(opts_tooltip(css = tooltip_css),
opts_sizing(width = .7) )
)
tooltip_css <- "background-color:gray;color:white;font-style:bold;padding:10px;border-radius:5px;font-family:BPG_lower"
girafe(ggobj = daily_cases,
options = list(opts_tooltip(css = tooltip_css),
opts_sizing(width = .7) )
)
daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5, color="#037ffc")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.3,
color="#037ffc", alpha=0.5)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
girafe(ggobj = daily_cases,
options = list(opts_tooltip(css = tooltip_css),
opts_sizing(width = .7) )
)
daily_cases  <-
src %>%
ggplot(aes(date, new_cases))+
geom_line(size=1, alpha=0.5, color="#037ffc")+
geom_point_interactive(aes(tooltip = paste0(date, ": ", new_cases), data_id = new_cases), size=0.4,
color="#037ffc", alpha=0.5)+
labs(x="თვეები",
y="ახალი შემთხვევების რ-ნობა")+
theme_minimal()
girafe(ggobj = daily_cases,
options = list(opts_tooltip(css = tooltip_css),
opts_sizing(width = .7) )
)
names(src)
runApp()
runApp()
runApp()
runApp()
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)%>%
pull(new_cases)
new_cases
runApp()
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)%>%
as.character(pull(new_cases))
new_cases <- src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)%>%
as.numeric(pull(new_cases))
src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)%>%
as.numeric(pull(new_cases))
src %>%
mutate(lubridate::as_date(date))%>%
arrange(desc(date))%>%
slice(1)%>%
pull(new_cases) %>%as.numeric()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
library(shiny)
library(shinydashboard)
library(tidyverse)
library(shiny.i18n)
library(ggiraph)
library(rgdal)
library(leaflet)
src <- readxl::read_excel("https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1", sheet=1)
url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1"
getwd()
url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1"
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
httr::GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
library(httr)
i18n <- Translator$new(translation_json_path='translations/translation.json')
i18n$set_translation_language('en')
url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1"
httr::GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1&rlkey=iwbmp1y34u30e9bri8n7y5hku"
httr::GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1&rlkey=iwbmp1y34u30e9bri8n7y5hku"
httr::GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
src <- readxl::read_excel(tf)
runApp()
runApp()
getwd()
runApp()
runApp()
runApp()
src <- readxl::read_excel(download.file(url), sheet=1)
src <- readxl::read_excel(download.file(url), sheet=1)
url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1&rlkey=iwbmp1y34u30e9bri8n7y5hku"
src <- readxl::read_excel(download.file(url, "www/src.xlsx"), sheet=1)
url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1&rlkey=iwbmp1y34u30e9bri8n7y5hku"
httr::GET(url, write_disk(path = "www/src.xlsx"))
httr::GET(url, write_disk(path = "www/src.xlsx", overwrite = T))
src <- readxl::read_excel("src.xlsx")
src <- readxl::read_excel("www/src.xlsx", sheet=1)
runApp()
runApp()
runApp()
src <- readxl::read_excel(url, sheet=1)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(rsconnect)
setwd("D:\\Dropbox\\My projects\\scratchpad\\cov_shiny")
rsconnect::deployApp('server')
runApp('server')
runApp('server')
runApp('server')
runApp()
runApp('server')
runApp('server')
runApp()
runApp('server')
runApp('server')
runApp('server')
runApp('server')
runApp('server')
getwd()
setwd("server")
hospitalization <- readxl::read_excel("www/src.xlsx", sheet="hospitalization")
View(hospitalization)
names(hospitalization)
thous_hospitalized  <-
hospitalization %>%
mutate(roll_7= rollmean(hospitalized_per_100k, 7, align = "left", fill = NA))%>%
ggplot()+
geom_col_interactive(aes(date, hospitalized_per_100k, tooltip = paste0(date, ": ", round(hospitalized_per_100k, 0)),
data_id = hospitalized_per_100k), size=0.4,
color=NA, fill = "blue", alpha=0.5)+
geom_line(aes(date, roll_7), size=1, color="blue")+
scale_x_datetime(date_labels = "%m/%Y")+
theme_minimal()
print(thous_hospitalized)
runApp()
install.packages("rhdx")
remotes::install_gitlab("dickoa/rhdx")
library(rhdx)
set_rhdx_config(hdx_site = "prod")
get_rhdx_config()
search_datasets("movement", rows=2)
search_datasets("movement")
library(rhdx)
ds <- get_resources()
list_of_ds <- search_datasets("displaced Nigeria", rows = 2)
?list_of_ds()
??list_of_ds()
?search_datasets
list_of_ds <- search_datasets("displaced Nigeria", rows = 2L)
list_of_ds <- search_datasets("displaced Nigeria")
list_of_ds <- rhdx::search_datasets("displaced Nigeria")
hdx_dataset_list(limit = 5000)
rhdx::hdx_dataset_list(limit = 5000)
install.packages("hdxr ")
install.packages("hdxr")
?rhdx
??rhdx
get_rhdx_config()
set_rhdx_config(hdx_site = "prod")
confih <- get_rhdx_config()
list_of_ds <- search_datasets("displaced Nigeria", rows = 2)
remotes::install_github("dickoa/rhdx")
remotes::install_github("dickoa/rhdx", force=T)
library(rhdx)
shiny::runApp()
temp <- rempfile()
temp <- tempfile()
url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1&rlkey=iwbmp1y34u30e9bri8n7y5hku"
download.file(url, temp, quiet = T)
src <- readxl::read_excel(tempfile, sheet=1)
tempfile
tempfile()
readxl::read_excel("url <- "https://www.dropbox.com/scl/fi/5f734v40u5t8pogvvcbpa/covid_data_georgia.xlsx?dl=1&rlkey=iwbmp1y34u30e9bri8n7y5hku"")
tempfile()
?httr::GET
total <- read_csv("www/data/total.csv")
getwd()
total <- read_csv("www/data/total.csv")
hospitalization <- read_csv("www/data/hospitalization.csv")
runApp()
GET(url, write_disk(tf <- tempfile(fileext = ".xls")))
df <- read_excel(tf, 1L)
library(readxl)
df <- read_excel(tf, 1L)
GET(url, write_disk(tf <- tempfile(fileext = ".xlsx")))
df <- read_excel(tf, 1L)
df <- read_excel(tf, 2L)
df
df <- read_excel(tf, "total")
runApp()
shiny::runApp()
